name: 'Build nx'
permissions: {}
on:
  workflow_dispatch: {}
jobs:
  build:
    name: 'Build'
    runs-on: 'ubuntu-latest'
    permissions:
      actions: 'read'
      contents: 'write'
      id-token: 'write'
      packages: 'write'
    env:
      NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
    steps:
      - name: 'Checkout repo'
        uses: 'actions/checkout@v4'
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Enable Corepack
        run: corepack enable

      - name: 'Set up NodeJS'
        uses: 'actions/setup-node@v4'
        with:
          node-version: '20.x'

      - name: 'Get pnpm store directory'
        shell: 'bash'
        run: |
          store_path=$(pnpm store path --silent);
          echo "STORE_PATH=${store_path}" >> $GITHUB_ENV;
          echo "Pnpm Store path: ${store_path}"

      - uses: 'actions/cache@v4'
        name: 'Setup pnpm cache'
        with:
          path: '${{ env.STORE_PATH }}'
          key: "${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}"
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - uses: 'actions/cache@v4'
        name: 'Setup nx cache'
        with:
          path: '.nx/cache'
          key: "${{ runner.os }}-nx-build-publish-${{ github.sha }}"
          restore-keys: |
            ${{ runner.os }}-nx-build-publish-

      - name: 'Install dependencies'
        run: |
          pnpm config list;
          pnpm install --frozen-lockfile;

      - name: 'Build'
        env:
          NG_BUILD_MAX_WORKERS: 1
        run: 'pnpm build'

      - name: 'Report'
        run: 'pnpm nx report'
